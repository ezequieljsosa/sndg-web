# Generated by Django 2.0 on 2018-10-27 03:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('biosql', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Affiliation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ExternalId',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=20)),
                ('type', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Identity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('url', models.URLField(null=True)),
                ('authority', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField()),
                ('ends', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('url', models.URLField(null=True)),
                ('country', models.CharField(max_length=200, null=True)),
                ('city', models.CharField(max_length=200, null=True)),
                ('scopus_id', models.CharField(max_length=200, null=True)),
                ('scopus_names', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=200)),
                ('name', models.CharField(default='', max_length=200)),
                ('scopus_id', models.CharField(max_length=200, null=True)),
                ('scopus_names', models.TextField(null=True)),
                ('email', models.EmailField(max_length=254)),
                ('arg_affiliation', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProcessStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProcessStatusStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('class_name', models.CharField(max_length=200)),
                ('class_identifier', models.CharField(max_length=200)),
                ('cast_int_identifier', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed', models.BooleanField(default=False)),
                ('process_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='bioresources.ProcessStatus')),
            ],
        ),
        migrations.CreateModel(
            name='ProcessStatusStepProcessUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_identifier', models.CharField(max_length=30, null=True)),
                ('process_identifier', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('process_status_step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='bioresources.ProcessStatusStep')),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('publication', 'publication'), ('bioproject', 'bioproject'), ('nuccore', 'nuccore'), ('assembly', 'assembly'), ('genome', 'genome'), ('ra', 'ra'), ('structure', 'structure'), ('expression', 'expression'), ('barcode', 'barcode')], max_length=10)),
                ('name', models.CharField(max_length=350)),
                ('description', models.TextField(blank=True)),
                ('deprecated', models.BooleanField(default=False)),
                ('index_updated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bioresources.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='ResourcePropertyValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=200)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bioresources.ResourceProperty')),
            ],
        ),
        migrations.CreateModel(
            name='ResourceRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=200)),
                ('deprecated', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Assembly',
            fields=[
                ('resource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bioresources.Resource')),
                ('intraspecific_name', models.CharField(max_length=250, null=True)),
                ('species_name', models.CharField(max_length=200, null=True)),
                ('level', models.CharField(max_length=50, null=True)),
                ('ncbi_org', models.CharField(max_length=200, null=True)),
                ('release_date', models.DateField(null=True)),
                ('update_date', models.DateField(null=True)),
                ('assembly_type', models.CharField(choices=[('haploid', 'haploid'), ('diploid', 'diploid'), ('other', 'other')], max_length=50, null=True)),
            ],
            bases=('bioresources.resource',),
        ),
        migrations.CreateModel(
            name='Barcode',
            fields=[
                ('resource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bioresources.Resource')),
                ('country', models.CharField(max_length=100)),
                ('subdivision', models.CharField(max_length=150)),
                ('marker', models.CharField(max_length=50, null=True)),
                ('image_url', models.URLField(null=True)),
                ('bold_org', models.CharField(max_length=255, null=True)),
                ('collectors', models.CharField(max_length=255, null=True)),
            ],
            bases=('bioresources.resource',),
        ),
        migrations.CreateModel(
            name='BioProject',
            fields=[
                ('resource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bioresources.Resource')),
                ('sample_scope', models.CharField(choices=[('monoisolate', 'monoisolate'), ('multi-species', 'multi-species'), ('environment', 'environment'), ('synthetic', 'synthetic'), ('other', 'other')], max_length=20, null=True)),
                ('material', models.CharField(choices=[('genome', 'genome'), ('metagenome', 'metagenome'), ('chromosome', 'chromosome'), ('transcriptome', 'transcriptome'), ('reagent', 'reagent'), ('proteome', 'proteome')], max_length=20, null=True)),
                ('capture', models.CharField(choices=[('whole', 'whole'), ('exome', 'exome'), ('barcode', 'barcode'), ('TargetedLocusLoci', 'TargetedLocusLoci')], max_length=200, null=True)),
                ('target', models.CharField(max_length=200, null=True)),
                ('submitters', models.TextField(null=True)),
                ('method', models.CharField(max_length=200, null=True)),
            ],
            bases=('bioresources.resource',),
        ),
        migrations.CreateModel(
            name='Expression',
            fields=[
                ('resource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bioresources.Resource')),
                ('pdat', models.DateField(null=True)),
                ('gdstype', models.CharField(max_length=250, null=True)),
                ('submitters', models.TextField(null=True)),
            ],
            bases=('bioresources.resource',),
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('resource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bioresources.Resource')),
                ('doi', models.CharField(max_length=100)),
                ('date_of_publication', models.DateField(max_length=200)),
                ('pubmed_id', models.CharField(max_length=50, null=True)),
                ('electronic_id', models.CharField(max_length=50, null=True)),
                ('scopus_id', models.CharField(max_length=50, null=True)),
                ('issn', models.CharField(max_length=50, null=True)),
            ],
            bases=('bioresources.resource',),
        ),
        migrations.CreateModel(
            name='ReadsArchive',
            fields=[
                ('resource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bioresources.Resource')),
                ('release_date', models.DateField(null=True)),
                ('update_date', models.DateField(null=True)),
            ],
            bases=('bioresources.resource',),
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('resource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bioresources.Resource')),
                ('country', models.CharField(max_length=100)),
                ('subdivision', models.CharField(max_length=150)),
                ('collection_date', models.DateField(null=True)),
                ('publication_date', models.DateField(null=True)),
                ('update_date', models.DateField(null=True)),
            ],
            bases=('bioresources.resource',),
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('resource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bioresources.Resource')),
                ('pdbClass', models.CharField(max_length=50, null=True)),
                ('deposit_date', models.DateField(null=True)),
                ('method', models.CharField(max_length=50, null=True)),
                ('org_list', models.TextField(null=True)),
            ],
            bases=('bioresources.resource',),
        ),
        migrations.AddField(
            model_name='resourcerelation',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='bioresources.Resource'),
        ),
        migrations.AddField(
            model_name='resourcerelation',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sources', to='bioresources.Resource'),
        ),
        migrations.AddField(
            model_name='resourceproperty',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bioresources.Resource'),
        ),
        migrations.AddField(
            model_name='resourceproperty',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='biosql.Term'),
        ),
        migrations.AddField(
            model_name='resource',
            name='ncbi_tax',
            field=models.ForeignKey(db_column='ncbi_tax', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bioresources', to='biosql.Taxon', to_field='ncbi_taxon_id'),
        ),
        migrations.AddField(
            model_name='identity',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bioresources.Person'),
        ),
        migrations.AddField(
            model_name='externalid',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bioresources.Organization'),
        ),
        migrations.AddField(
            model_name='externalid',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='external_ids', to='bioresources.Resource'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affiliations', to='bioresources.Person'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='organizations',
            field=models.ManyToManyField(to='bioresources.Organization'),
        ),
        migrations.AlterUniqueTogether(
            name='resourcerelation',
            unique_together={('source', 'target', 'deprecated')},
        ),
        migrations.AlterUniqueTogether(
            name='resource',
            unique_together={('type', 'name')},
        ),
        migrations.AddField(
            model_name='affiliation',
            name='publication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affiliations', to='bioresources.Publication'),
        ),
    ]
